@{
    ViewBag.Title = "Lịch kiểm tra tàu";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section huongdan{
    <text>Lịch kiểm tra tàu</text>
}
@{
    IEnumerable<WebAuLac.Models.tableDieuDongBacThang> bangKe = (IEnumerable<WebAuLac.Models.tableDieuDongBacThang>)ViewBag.BangKe;

}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-inline">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row" style="text-align:left; margin-bottom:15px;">
            <div class="form-group">
                <div>                    
                    <div class="checkbox">
                        <label><input type="checkbox" value="0" name="chkPos" checked />Lịch kiểm tra tàu</label>
                        <label><input type="checkbox" value="20" name="chkPos" />Thuyền trưởng</label>
                        <label><input type="checkbox" value="21" name="chkPos" />Đại phó</label>
                        <label><input type="checkbox" value="22" name="chkPos" />Phó 2</label>
                        <label><input type="checkbox" value="23" name="chkPos" />Phó 3</label>
                    </div>
                    <a id="btnLoc" href="" class="btn btn-primary"><i class="fa fa-filter"></i>Lấy danh sách điều động</a>
                    <a href="@Url.Action("Create", "LichKiemTraTaus")" class="btn btn-primary" data-modal><i class="fa fa-plus m-left-xs"></i>Thêm lịch kiểm tra</a>
                    <a id="btnEdit" href="" class="btn btn-success" data-modal><i class="fa fa-edit"></i>Sửa lịch</a>
                    <a id="btnDelete" href="" class="btn btn-danger" data-modal><i class="fa fa-trash"></i>Xóa lịch</a>
                    <a id="btnTang" href="" class="btn btn-success" data-modal><i class="fa fa-plus"></i>Tăng thời gian đi tàu</a>
                    <a id="btnGiam" href="" class="btn btn-danger" data-modal><i class="fa fa-minus"></i>Giảm thời gian đi tàu</a>
                </div>
            </div>
        </div>


    </div>
}
<div id="bangDieuDong">
    @if (bangKe != null)
    {

        <table class="table table-bordered table-striped table-hover" id="bangKe">
            <thead>
                <tr>
                    <th></th>
                    @{
                        List<string> tieuDe = ViewBag.TieuDe;
                        foreach (string s in tieuDe)
                        {
                            <th>@s</th>
                        }
                    }
                </tr>
            </thead>
            <tbody>
                @{
                    //khai báo mảng màu
                    string[] lightColors = new string[]
                     {
                    "#FFD1DC", // lightpink
                    "#FFFAF0",  // floralwhite
                    "#FFA07A", // lightsalmon
                    "#90EE90", // lightgreen
                    "#20B2AA", // lightseagreen
                    "#FFFFE0", // lightyellow
                    "#E0FFFF", // lightcyan
                    "#FAFAD2", // lightgoldenrodyellow
                    "#ADD8E6", // lightblue
                    "#F0FFF0", // honeydew
                    "#9370DB", // MediumOrchid
                    "#CD853F", // Peru
                    "#E6E6FA", // lavender
                    "#B0C4DE", // lightsteelblue
                    "#FFE4E1", // mistyrose
                    "#F08080", // lightcoral
                    "#FFF0F5", // lavenderblush
                    "#FFF5EE", // seashell
                    "#F5FFFA", // mintcream
                    "#F5F5F5", // whitesmoke
                    "#D3D3D3", // lightgray
                 };

                    int stt = -1;
                    int idDept = 0;
                }
                @foreach (var item in bangKe)
                {
                    if (idDept != item.DepartmentID)
                    {
                        stt++;
                        idDept = item.DepartmentID;
                    }
                    <tr>
                        <td style="background-color: @lightColors[stt];">@item.Description</td>
                        @{//bắt đầu hiển thị thông tin của các cột
                            int viTriMerge = 0;
                            int soCotDuocMerge = 1;
                            string tenNguoi = "";
                            string nguoiThayTheHayHienTai = "0"; //biến cho biết người thay thế 1 hay là người hiện tại 0
                            for (int i = 1; i <= 21; i++)
                            {
                                string s = item.LayGiaTriCot(i);
                                if (s != null && s != "")
                                {
                                    //tách chuỗi
                                    string[] ss = s.Split('_');
                                    if (item.Loai == "LICHKIEMTRA")
                                    {
                                        int idLich = int.Parse(ss[2]);
                                        string tenLich = @ss[0] + " " + @ss[1];
                                        <td style="background-color: @lightColors[stt];" onclick="updateLink(this)">
                                            @tenLich
                                            <span class="hidden-value">@idLich</span>
                                        </td>
                                    }
                                    else //loại điều động bậc thang
                                    {
                                        //lấy ra số tháng, chính là số cột được merge
                                        soCotDuocMerge = int.Parse(ss[2]) - 1;
                                        tenNguoi = ss[0];
                                        nguoiThayTheHayHienTai = ss[4];
                                        //kiểm tra là người hiện tại hay người thay thế
                                        if (nguoiThayTheHayHienTai == "1")
                                        {
                                            //cột đầu tiên sẽ là cột ghi ngày
                                            <td style="background-color: yellow;">
                                                @ss[1]
                                            </td>
                                        }
                                        else
                                        {
                                            //cột đầu tiên sẽ là cột ghi ngày
                                            <td style="background-color: @lightColors[stt];">
                                                @ss[1]
                                            </td>
                                        }
                                    }
                                }
                                else //nếu chuỗi của cột là null
                                {
                                    if (item.Loai == "LICHKIEMTRA")
                                    {
                                        <td></td>
                                    }
                                    else //các loại điều động bậc thang khi chuỗi bằng null
                                    {
                                        //kiểm tra xem có đang merge hay không?
                                        if (tenNguoi == "")
                                        {
                                            <td></td>
                                        }
                                        else
                                        {
                                            if (viTriMerge == 0) //cột thứ 2 ngay sau cột tháng
                                            {
                                                if (nguoiThayTheHayHienTai == "0")
                                                {
                                                    <td style="background-color: @lightColors[stt]; text-align:center" colspan="@soCotDuocMerge">
                                                        @tenNguoi
                                                    </td>
                                                }
                                                else
                                                {
                                                    <td style="background-color: yellow; text-align:center" colspan="@soCotDuocMerge">
                                                        @tenNguoi
                                                    </td>
                                                }

                                            }
                                            viTriMerge++;
                                            if (viTriMerge == soCotDuocMerge)
                                            {
                                                viTriMerge = 0;
                                                soCotDuocMerge = 1;
                                                tenNguoi = "";
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    </tr>

                }
            </tbody>
        </table>
    }
</div>
@section Styles{
    @Styles.Render("~/vendors/DataTables/css")
    @Styles.Render("~/vendors/DataTables/Buttons/css")
    <style type="text/css">
        .hidden-value {
            display: none;
        }
    </style>
}
@section scripts{
    @Scripts.Render("~/vendors/DataTables/js")
    @Scripts.Render("~/vendors/DataTables/Buttons/js")
    @Scripts.Render("~/bundles/jqueryval")
    <!--modal form-->
    @Scripts.Render("~/bundles/modalform")
<script language="javascript">
        // Hàm cập nhật giá trị href của link khi click vào ô
        function updateLink(cell) {
            // Lấy giá trị ẩn từ biến ẩn trong ô
            var hiddenValue = cell.querySelector('.hidden-value').textContent;

            // Cập nhật href của link với giá trị từ ô
            var linkDel = document.getElementById('btnDelete');
            var urlDel = '@Html.Raw(@Url.Action("Delete", "LichKiemTraTaus", new { id="kt-id"}))'
            .replace("kt-id", encodeURIComponent(hiddenValue));
            linkDel.href = urlDel;
            var linkEdit = document.getElementById('btnEdit');
            var urlDel = '@Html.Raw(@Url.Action("Edit", "LichKiemTraTaus", new { id="kt-id"}))'
            .replace("kt-id", encodeURIComponent(hiddenValue));
                linkEdit.href = urlDel;
        }
        $(document).ready(function () {
            // Event listener for the submit button
            $('#btnLoc').on('click', function () {
                // Get the values of checked checkboxes
                var selectedValues = $('.checkbox input:checked').map(function () {
                    return $(this).val();
                }).get();

                // Redirect to the server action with the selected values
                var listid = selectedValues.join(',');
                var url = '@Html.Raw(@Url.Action("DieuDongBacThang", "LichKiemTraTaus", new { id="posid"}))'
                            .replace('posid', encodeURIComponent(listid));
                window.location.href = url;
            });
        });
</script>
}
