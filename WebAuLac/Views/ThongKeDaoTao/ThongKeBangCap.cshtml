@{
    ViewBag.Title = "Thống kê bằng cấp";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section huongdan{
    <text>Thống kê bằng cấp</text>
}
@{
    IEnumerable<WebAuLac.Models.sp_LayDSBangCapTheoID_Result> bangKe = (IEnumerable<WebAuLac.Models.sp_LayDSBangCapTheoID_Result>)ViewBag.BangKe;
    
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-inline">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row" style="text-align:center; margin-bottom:15px;">
            @*<div class="form-group">
                <label class="control-label">Chọn nhóm:</label>
                <select id="loaiDoiTuong" class="form-control">                    
                    <option value="1">Thuyền viên</option>
                    <option value="2">Nhân viên</option>
                    <option value="0">Tất cả</option>
                </select>                
            </div>*@
            <div class="form-group">
                @Html.DropDownList("DegreeID", null, htmlAttributes: new { @class = "form-control"})
            </div>
            <div class="form-group">
                <div>
                    <button class="btn btn-warning" type="submit" value="xemthongtin" name="answer">
                        <i class="fa fa-calculator"></i> Xem thông tin
                    </button>

                    <button class="btn btn-success" type="submit" value="xuatexcel" name="answer">
                        <i class="fa fa-file-excel-o"></i> Xuất Excel
                    </button>

                    <button class="btn btn-success" type="submit" value="xuattatca" name="answer">
                        <i class="fa fa-file-excel-o"></i> Tất cả bằng cấp
                    </button>

                </div>
            </div>
        </div>


    </div>
}
@if (bangKe != null)
{
    if (bangKe.Count() > 0)
    {
        @*string chucDanh = ViewBag.chucDanh;
        decimal tongChiPhi = ViewBag.tongChiPhi;
        <p style="text-align:center">
            Chức danh: @chucDanh
            <br /> Tổng chi phí học tập: @tongChiPhi.ToString("#,#")
        </p>*@
    }
    <table class="table table-bordered table-striped table-hover" id="bangKe">
        <thead>
            <tr>
                <th>STT</th>                
                <th>
                    Họ tên
                </th>
                <th>
                    Ngày sinh
                </th>
                <th>
                    Tàu/PB
                </th>
                <th>
                    Chức danh
                </th>
                <th>
                    Số BC
                </th>
                <th>
                    Ngày cấp
                </th>         
                <th>
                    Ngày hết hạn
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in bangKe)
            {
                string ngayBC = "";
                string ngayHH = "";
                string ngaySinh = "";
                string spanNgayBC = "";
                string spanNgayHH = "";
                string spanNgaySinh = "";
                if (item.DegreeDate.HasValue)
                {
                    ngayBC = item.DegreeDate.Value.ToString("dd/MM/yyyy");
                    spanNgayBC = item.DegreeDate.Value.ToString("yyyyMMdd");
                }

                if (item.ExpirationDate.HasValue)
                {
                    ngayHH = item.ExpirationDate.Value.ToString("dd/MM/yyyy");
                    spanNgayHH = item.ExpirationDate.Value.ToString("yyyyMMdd");
                }
                if (item.BirthDay.HasValue)
                {
                    ngaySinh = item.BirthDay.Value.ToString("dd/MM/yyyy");
                    spanNgaySinh = item.BirthDay.Value.ToString("yyyyMMdd");
                }
                <tr>
                    <td></td>                    
                    <td>
                        @{
                            string hoTen = item.FirstName + " " + item.LastName;
                        }
                        <text>@hoTen</text>                        
                    </td>
                    <td>
                        <span>@spanNgaySinh</span>@ngaySinh
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DepartmentName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ChucVu)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DegreeNo)
                    </td>
                    <td>
                        <span>@spanNgayBC</span>@ngayBC
                    </td>
                    <td>
                        <span>@spanNgayHH</span>@ngayHH
                    </td>
                   
                </tr>
            }
        </tbody>
    </table>
}
@section Styles{
    @Styles.Render("~/vendors/DataTables/css")
    @Styles.Render("~/vendors/DataTables/Buttons/css")
    <style>
        #bangKe span {
            display: none;
        }
    </style>

}
@section scripts{
    @Scripts.Render("~/vendors/DataTables/js")
    @Scripts.Render("~/vendors/DataTables/Buttons/js")
    @Scripts.Render("~/bundles/jqueryval")
    <!--modal form-->
    @Scripts.Render("~/bundles/modalform")
    <script type="text/javascript">
        var columnGroup = 4;
        $(document).ready(function () {
            LoadDatatable();
            $('#DegreeID').addClass('selectpicker');
            $('#DegreeID').attr('data-live-search', 'true');
            $('#DegreeID').selectpicker('refresh');
        })
        function LoadDatatable() {
            t = $('#bangKe').DataTable({
                "language": {
                    "url": "/vendors/DataTables/langs/Vietnamese.json"
                },
                "iDisplayLength": 25,
                "columnDefs": [{
                    "searchable": false,
                    "orderable": false,
                    "targets": 0
                }],
                //"order": [[1, 'asc']]

            });
            t.on('order.dt search.dt', function () {
                t.column(0, { search: 'applied', order: 'applied' }).nodes().each(function (cell, i) {
                    cell.innerHTML = i + 1;
                });
            }).draw()
        }
        //
        $('#loaiDoiTuong').on("change", function () {
            var iDoiTuong = $('#loaiDoiTuong').val();
            var regionsSelect = $('#DegreeID');
            regionsSelect.empty();                     
            $.getJSON('@Url.Action("LocDoiTuong", "ThongKeDaoTao")', { loaiDoiTuong: iDoiTuong }, function (regions) {
                if (regions != null && !jQuery.isEmptyObject(regions)) {                    
                    $.each(regions, function (index, region) {
                        //alert(region.Text);
                        regionsSelect.append($('<option/>', {
                            value: region.Value,
                            text: region.Text
                        }));
                        $('.selectpicker').selectpicker('refresh');
                    });
                };
            });            
        });
    </script>
}



