@model WebAuLac.Models.TuNgayDenNgay
@{
    ViewBag.Title = "Thống kê đào tạo";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section huongdan{
    <text>Thống kê danh sách nhân viên được đào tạo theo thời gian</text>
}
@{
    IEnumerable<WebAuLac.Models.sp_T_LayDanhSachHocTheoThoiGian_Result> bangKe = (IEnumerable<WebAuLac.Models.sp_T_LayDanhSachHocTheoThoiGian_Result>)ViewBag.BangKe;
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-inline">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row" style="text-align:center; margin-bottom:15px;">
            <div class="form-group">
                @Html.LabelFor(model => model.TuNgay, htmlAttributes: new { @class = "control-label" })

                @Html.EditorFor(model => model.TuNgay, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TuNgay, "", new { @class = "text-danger" })

            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.DenNgay, htmlAttributes: new { @class = "control-label" })

                @Html.EditorFor(model => model.DenNgay, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DenNgay, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <div>
                    <button class="btn btn-success" type="submit" value="xemthongtin" name="answer">
                        <i class="fa fa-calculator"></i> Xem thông tin
                    </button>

                    <button class="btn btn-success" type="submit" value="xuatexcel" name="answer">
                        <i class="fa fa-calculator"></i> Xuất excel
                    </button>
                </div>
            </div>
        </div>


    </div>
}
@if (bangKe != null)
{

    if (bangKe.Count() > 0)
    {
        decimal chiPhi = ViewBag.chiPhi;
        int soNhanVien = ViewBag.soNhanVien;
        <p style="text-align:center">
            Số nhân viên đã được đi học: @soNhanVien
            <br /> Tổng chi phí học tập: @chiPhi.ToString("#,#")
        </p>
    }
    <table class="table table-bordered table-striped table-hover" id="bangKe">
        <thead>
            <tr>
                <th>STT</th>
                <th>
                    Họ tên
                </th>
                <th>
                    Ngày sinh
                </th>
                <th>
                    Chức danh
                </th>
                <th>
                    Tên khóa học
                </th>
                <th>
                    Cơ sở đào tạo
                </th>
                <th>
                    Theo yêu cầu
                </th>
                <th>
                    Học phí
                </th>
                <th>
                    Bắt đầu
                </th>
                <th>
                    Kết thúc
                </th>         
                <th>
                    Kết quả
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in bangKe)
            {
                string tuNgay = "";
                string denNgay = "";
                string spanTuNgay = "";
                string spanDenNgay = "";
                if (item.ngaybatdau.HasValue)
                {
                    tuNgay = item.ngaybatdau.Value.ToString("dd/MM/yyyy");
                    spanTuNgay = item.ngaybatdau.Value.ToString("yyyyMMdd");
                }
                if (item.NgayKetThuc.HasValue)
                {
                    denNgay = item.NgayKetThuc.Value.ToString("dd/MM/yyyy");
                    spanDenNgay = item.NgayKetThuc.Value.ToString("yyyyMMdd");
                }
                <tr>
                    <td></td>
                    <td>
                        @{
                            string hoTen = item.FirstName + " " + item.LastName;
                        }
                        <text>@hoTen</text>
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.BirthDay)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ChucDanh)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.tenkhoadaotao)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.tencoso)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TheoYeuCau)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.hocphi)
                    </td>
                    <td>
                        <span>@spanTuNgay</span>@tuNgay
                    </td>
                    <td>
                        <span>@spanDenNgay</span>@denNgay
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ketqua)
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
@section Styles{
    @Styles.Render("~/vendors/DataTables/css")
    @Styles.Render("~/vendors/DataTables/Buttons/css")
    <style>
        #bangKe span {
            display: none;
        }
    </style>
}
@section scripts{
    @Scripts.Render("~/vendors/DataTables/js")
    @Scripts.Render("~/vendors/DataTables/Buttons/js")
    @Scripts.Render("~/bundles/jqueryval")
    <!--modal form-->
    @Scripts.Render("~/bundles/modalform")
    <script type="text/javascript">
        var columnGroup = 4;
        $(document).ready(function () {
            LoadDatatable();
        })
        function LoadDatatable() {
            t = $('#bangKe').DataTable({
                "language": {
                    "url": "/vendors/DataTables/langs/Vietnamese.json"
                },
                "iDisplayLength": 25,
                "columnDefs": [{
                    "searchable": false,
                    "orderable": false,
                    "targets": 0
                }],
                "order": [[1, 'asc']]
                
            });
            t.on('order.dt search.dt', function () {
                t.column(0, { search: 'applied', order: 'applied' }).nodes().each(function (cell, i) {
                    cell.innerHTML = i + 1;
                });
            }).draw()
        }
    </script>
}



