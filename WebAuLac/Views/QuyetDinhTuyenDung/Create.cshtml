@model WebAuLac.Models.HRM_EMPLOYMENTHISTORY

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
    <h4 class="modal-title" id="myModalLabel">Thêm mới Quyết định Tuyển dụng</h4>
</div>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="modal-body">
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.SalaryPositionID)
            @Html.HiddenFor(model => model.PerPlurality)
           

            <div class="form-group">

                @Html.LabelFor(model => model.DecisionNo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-2">
                    @Html.EditorFor(model => model.DecisionNo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DecisionNo, "", new { @class = "text-danger" })
                </div>

                @Html.LabelFor(model => model.DecisionDate, "Ngày QĐ/HL/XT", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-2">
                    @Html.EditorFor(model => model.DecisionDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DecisionDate, "", new { @class = "text-danger" })
                </div>
               
                <div class="col-md-2">
                    @Html.EditorFor(model => model.EffectiveDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EffectiveDate, "", new { @class = "text-danger" })
                </div>
                
                <div class="col-md-2">
                    @Html.EditorFor(model => model.NgayXuongTau, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NgayXuongTau, "", new { @class = "text-danger" })
                </div>

            </div>

            <div class="form-group">
                <label class="control-label col-md-2">Loại QĐ</label>
                <div class="col-md-4">
                    @Html.DropDownList("CategoryDecisionID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CategoryDecisionID, "", new { @class = "text-danger" })
                </div>
                
                @*@Html.LabelFor(model => model.XacNhan, htmlAttributes: new { @class = "control-label col-md-2" })*@
                <label class="control-label col-md-2">Xác nhận</label>
                <div class="col-md-4">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.XacNhan)
                        @Html.ValidationMessageFor(model => model.XacNhan, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">Họ tên</label>
                <div class="col-md-4">
                    @Html.DropDownList("EmployeeID", null, htmlAttributes: new { @class = "form-control selectpicker" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">PB/Tàu</label>
                <div class="col-md-4">
                    @Html.DropDownList("DepartmentID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.DepartmentID, "", new { @class = "text-danger" })
                </div>

                <label class="control-label col-md-2">Chức danh</label>
                <div class="col-md-4">
                    @Html.DropDownList("PositionID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.PositionID, "", new { @class = "text-danger" })
                </div>
            </div>
            
            <div class="form-group">
                @Html.LabelFor(model => model.PerPosition, "% Lương", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-2">
                    @Html.EditorFor(model => model.PerPosition, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PerPosition, "", new { @class = "text-danger" })
                </div>

                @Html.LabelFor(model => model.Salary, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-2">                                    
                    @Html.EditorFor(model => model.Salary, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Salary, "", new { @class = "text-danger" })
                </div>

                @Html.LabelFor(model => model.AllowanceSalary, "PC T.Nhiệm", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-2">
                    @Html.EditorFor(model => model.AllowanceSalary, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AllowanceSalary, "", new { @class = "text-danger" })
                </div>
            </div> 
            
            <div class="form-group">
                <div class="col-md-4">                    
                </div>

                @Html.LabelFor(model => model.Bonus, "Lương TT", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-2">
                    @Html.EditorFor(model => model.Bonus, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Bonus, "", new { @class = "text-danger" })
                </div>

                @Html.LabelFor(model => model.AllowanceBonus, "PC TT", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-2">
                    @Html.EditorFor(model => model.AllowanceBonus, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AllowanceBonus, "", new { @class = "text-danger" })
                </div>
            </div>            

            <div class="form-group">
                @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Note, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
                </div>
            </div>
        

        </div>
    </div>
    <div class="modal-footer">
        <button class="btn btn-default" data-dismiss="modal" style="margin-bottom:0px;">
            <i class="fa fa-ban"></i> Hủy
        </button>
        <button class="btn btn-success" type="submit">
            <i class="fa fa-save"></i> Lưu thông tin
        </button>
    </div>        
}

<script type="text/javascript">
    $(document).ready(function () {
        //Load số quyết định theo từng loại quyết định
        $('#EmployeeID').addClass('selectpicker');
        $('#EmployeeID').attr('data-live-search', 'true');
        $('#EmployeeID').selectpicker('refresh');
    });

    $('#PositionID').change(function () {

        //Lấy thông tin chức vụ
        //var e = document.getElementById("#PositionID");
        //var str = e.options[e.selectedIndex].value;
        var str = $("#DepartmentID option:selected").val();
        LoadRegion(str, this.value);
    });

    function LoadRegion(DepartmentID, PositionID) {
        //var salary = $('#Salary');
        //salary.empty();
        //salary.append($('').val('').text('0'));
        $.ajax({
            type: "POST",
            url: '@Url.Action("GetRank", "QuyetDinhTuyenDung")',
            data: "{'DepartmentID':'" + DepartmentID + "','PositionID':'" + PositionID + "'}",
            contentType: "application/json; charset=utf-8",
            dataType: 'json',
            cache: false,
            success: function (data) {
                $.each(data, function (index, item) {
                    document.getElementById("Salary").value = item.Salary;// item.DecisionNo;
                    //salary.append($('').val(item.Salary).text(item.Salary));
                });


            },
            error: function () {
                item.Salary = 0;
                ////Nếu giá trị Null thì trả về null cho phần lương
                //salary.empty();
                //salary.append($('').val('').text('0'));
                //// alert("Failed to load Item");
            }
        });
    }
</script>
